name: Build & Release
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest]
        arch: [amd64]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22.2'
      - name: Get dependencies
        run: |
          go get -v -t -d ./...
      - name: Build
        env:
          GOARCH: ${{ matrix.arch }}
        run: |
          go build -o bin/app
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pass-keeper-${{ runner.os }}-${{ matrix.arch }}
          path: bin/app
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: dist
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ steps.create_release.outputs.tag_name }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          ARCH: ${{ matrix.arch }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/pass-keeper-${{ runner.os }}-${{ env.ARCH }}
          asset_name: pass-keeper-${{ runner.os }}-${{ env.ARCH }}
          asset_content_type: application/octet-stream