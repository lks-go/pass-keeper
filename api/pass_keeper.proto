syntax = "proto3";

package pass.keeper;

option go_package = "pkg/grpc_api";

message RegisterUserRequest {
  string login = 1;
  string password = 2;
}

message RegisterUserResponse {}

message AuthUserRequest {
  string login = 1;
  string password = 2;
}

message AuthUserResponse {
  string token = 1;
}

message AddDataLoginPassRequest {
  string title = 1;
  string login = 2;
  string pass = 3;
}

message GetDataLoginPassResponse {
  int32 id = 1;
  string title = 2;
  string login = 3;
  string pass = 4;
}

message AddDataTextRequest {
  string title = 1;
  string text = 2;
}

message GetDataTextResponse {
  int32 id = 1;
  string title = 2;
  string text = 3;
}

message AddDataCardRequest {
  string title = 1;
  string number = 2;
  string owner = 3;
  string exp_date = 4;
  string cvc_code = 5;
}

message GetDataCardResponse {
  int32 id = 1;
  string title = 2;
  string number = 3;
  string owner = 4;
  string exp_date = 5;
  string cvc_code = 6;
}

message AddDataBinaryRequest {
  bytes body = 1;
}

message AddDataBinaryTitleRequest {
  int32 id = 1;
  string title = 2;
}

// Common messages that have the same fields for different request types
message GetDataRequest {
  int32 id = 1;
}

message GetDataListRequest {}

message GetDataListResponse {
  repeated Data list = 1;

  message Data {
    int32 id = 1;
    string title = 2;
  }
}

message AddDataResponse{
  int32 id = 1;
}

service PassKeeper {
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);
  rpc AuthUser(AuthUserRequest) returns (AuthUserResponse);

  rpc AddDataLoginPass(AddDataLoginPassRequest) returns (AddDataResponse);
  rpc GetDataLoginPassList(GetDataListRequest) returns (GetDataListResponse);
  rpc GetDataLoginPass(GetDataRequest) returns (GetDataLoginPassResponse);

  rpc AddDataText(AddDataTextRequest) returns (AddDataResponse);
  rpc GetDataTextList(GetDataListRequest) returns (GetDataListResponse);
  rpc GetDataText(GetDataRequest) returns (GetDataTextResponse);

  rpc AddDataCard(AddDataCardRequest) returns (AddDataResponse);
  rpc GetDataCardList(GetDataListRequest) returns (GetDataListResponse);
  rpc GetDataCard(GetDataRequest) returns (GetDataCardResponse);

  rpc AddDataBinary(stream AddDataBinaryRequest) returns (AddDataResponse);
  rpc AddDataBinaryTitle(AddDataBinaryTitleRequest) returns (AddDataResponse);
}